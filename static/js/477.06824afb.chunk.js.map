{"version":3,"file":"static/js/477.06824afb.chunk.js","mappings":"0LAEaA,EAAYC,EAAAA,GAAAA,IAAH,gHAIT,qBAAGC,MAAkBC,MAAM,EAA3B,IAGAC,EAAOH,EAAAA,GAAAA,EAAH,wFAEA,qBAAGC,MAAkBG,YAAYC,IAAjC,IAIJC,EAAQN,EAAAA,GAAAA,IAAH,6C,uCCTZO,EAAqB,CACzBC,WAAY,CACVC,KAAM,2BACNC,MAAOF,GAETG,MAAO,CACLF,KAAM,wCACNC,MAAOC,GAETC,UAAW,CACTH,KAAM,sBACNC,MAAOE,IAeX,EAXgB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACXC,EAAUP,EAAmBM,GAEnC,OACE,UAACd,EAAD,YACE,SAACI,EAAD,UAAOW,EAAQL,QACf,SAACH,EAAD,CAAOS,IAAKD,EAAQJ,MAAOM,IAAKF,EAAQL,SAG7C,C,+KC3BYQ,EAAWjB,EAAAA,GAAAA,IAAH,iRACR,qBAAGC,MAAkBC,MAAM,EAA3B,IAAmC,qBAAGD,MAAkBC,MAAM,EAA3B,IAGjC,qBAAGD,MAAkBC,MAAM,EAA3B,IACP,qBAAGD,MAAkBC,MAAM,EAA3B,IAMK,qBAAGD,MAAkBiB,OAAOC,KAA5B,IACK,qBAAGlB,MAAkBmB,QAAQ,EAA7B,IAIP,qBAAGnB,MAAkBC,MAAM,EAA3B,IAIEmB,EAAUrB,EAAAA,GAAAA,IAAH,2CACP,qBAAGC,MAAkBC,MAAM,EAA3B,IAGAoB,EAAYtB,EAAAA,GAAAA,IAAH,4HACT,qBAAGC,MAAkBC,MAAM,EAA3B,IAGJ,qBAAGD,MAAkBC,MAAM,EAA3B,IAIIqB,EAASvB,EAAAA,GAAAA,IAAH,wGAIA,qBAAGC,MAAkBuB,MAAMC,MAA3B,IAGNC,EAAQ1B,EAAAA,GAAAA,GAAH,wFACF,qBAAGC,MAAkBC,MAAM,EAA3B,IACD,qBAAGD,MAAkB0B,UAAUC,CAA/B,IAIFC,EAAW7B,EAAAA,GAAAA,IAAH,+GACN,qBAAGC,MAAkB0B,UAAUG,CAA/B,IAID,qBAAG7B,MAAkBC,MAAM,EAA3B,IACN,qBAAGD,MAAkBC,MAAM,EAA3B,IAIK6B,EAAO/B,EAAAA,GAAAA,IAAH,0CAIJgC,GAAOhC,EAAAA,EAAAA,IAAOiC,EAAAA,GAAPjC,CAAH,0NAQN,qBAAGC,MAAkBiB,OAAOC,KAA5B,IACW,qBAAGlB,MAAkBiB,OAAOgB,MAA5B,IAGJ,qBAAGjC,MAAkBmB,QAAQ,EAA7B,I,oBCvELe,EAAY,mCAAG,WAAMC,GAAN,gFACpBC,EADoB,UACXC,EAAAA,GAAAA,MADW,YACUF,GADV,kBAIDG,EAAAA,EAAAA,IAAQF,GAJP,cAIlBG,EAJkB,yBAKjBA,EAASC,MALQ,yDAOjB,MAPiB,yDAAH,sD,2DCiHzB,EAhGqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOjC,EAAP,KAAcsC,EAAd,KAGMC,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,WAEzCC,EAAAA,EAAAA,YAAU,WAcR,OAbAN,GAAa,IAEb,iBAAC,6GAEsBb,EAAaO,GAFnC,OAESD,EAFT,OAGGK,EAASL,GAHZ,gDAKGQ,EAAS,EAAD,IALX,yBAOGD,GAAa,GAPhB,2EAAD,GAWO,WACLC,EAAS,MACTH,EAAS,KACV,CACF,GAAE,CAACJ,IAEJ,IAAMa,EAAS,CACbC,SAAU7C,EACV8C,WAAYZ,GAERa,GAAcC,EAAAA,EAAAA,GAAeJ,GAE7BK,EAAc,OAALf,QAAK,IAALA,GAAAA,EAAK,YAAL,UACRgB,EAAAA,IADQ,cACIhB,QADJ,IACIA,OADJ,EACIA,EAAK,aACpBiB,EACEC,EAAO,IAAIC,KAAJ,OAASnB,QAAT,IAASA,OAAT,EAASA,EAAK,cAAoBoB,cACzCC,GAA2C,GAAlCC,OAAM,OAACtB,QAAD,IAACA,OAAD,EAACA,EAAK,eAA0BuB,UAC/CC,EAAM,OAAGxB,QAAH,IAAGA,OAAH,EAAGA,EAAOwB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAE3D,OACE,gCACE,SAACxD,EAAD,WACE,UAACe,EAAD,CAAM0C,GAAIxB,EAAV,WACE,SAAC,MAAD,IADF,gBAKDL,IACC,iCACE,UAACvB,EAAD,YACE,SAACC,EAAD,CAAQR,IAAK6C,EAAQ5C,IAAG,OAAE6B,QAAF,IAAEA,OAAF,EAAEA,EAAK,kBAC/B,UAAChB,EAAD,YACE,UAACH,EAAD,kBACGmB,QADH,IACGA,OADH,EACGA,EAAK,gBACJ8B,MAAMZ,KAAS,iCAASA,EAAT,WAEnB,wCAAgBG,EAAhB,QACA,sCACA,8BAAIrB,QAAJ,IAAIA,OAAJ,EAAIA,EAAO+B,WACC,KAAXP,IACC,iCACE,oCACA,uBAAIA,cAKZ,mBACA,UAAChD,EAAD,YACE,oDACA,UAACU,EAAD,YACE,SAACC,EAAD,CAAM0C,GAAG,OAAOtB,MAAO,CAAEC,KAAMH,GAA/B,mBAGA,SAAClB,EAAD,CAAM0C,GAAG,UAAUtB,MAAO,CAAEC,KAAMH,GAAlC,yBAIF,SAAC,EAAA2B,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,YAMPhC,IAAa,SAACgC,EAAA,EAAD,KAEZhC,GAAaW,IAAe,SAACsB,EAAA,EAAD,CAASnE,KAAM6C,MAGlD,C,qCCnGD,IAbuB,SAAC,GAAqD,IAAnDF,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,WAAwC,IAA5BwB,eAAAA,OAA4B,SAC1E,OAAIzB,EACK0B,EAAAA,GAAAA,MAEJzB,GAAewB,GAGfxB,GAAcwB,EACVC,EAAAA,GAAAA,WAEF,KALEA,EAAAA,GAAAA,WAMV,C","sources":["components/Message/Message.styled.js","components/Message/Message.jsx","pages/MovieDetails/MovieDetails.styled.js","utils/api/getMovieById.js","pages/MovieDetails/MovieDetails.jsx","utils/getMessageType.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: ${({ theme }) => theme.space[5]}px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  font-size: 24px;\n`;\n\nexport const Image = styled.img`\n  max-width: 200px;\n`;\n","import { Container, Text, Image } from './Message.styled';\nimport PropTypes from 'prop-types';\nimport emptyQuery from 'images/empty-query.png';\nimport error from 'images/error.png';\nimport noResults from 'images/no-results.png';\n\nconst messageDescription = {\n  emptyQuery: {\n    text: 'Type to search something',\n    image: emptyQuery,\n  },\n  error: {\n    text: 'Something went wrong. Try again later',\n    image: error,\n  },\n  noResults: {\n    text: 'Nothing to see here',\n    image: noResults,\n  },\n};\n\nconst Message = ({ type }) => {\n  const message = messageDescription[type];\n\n  return (\n    <Container>\n      <Text>{message.text}</Text>\n      <Image src={message.image} alt={message.text} />\n    </Container>\n  );\n};\n\nexport default Message;\n\nMessage.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Controls = styled.div`\n  padding: ${({ theme }) => theme.space[3]}px ${({ theme }) => theme.space[4]}px;\n\n  > a {\n    padding: ${({ theme }) => theme.space[3]}px\n      ${({ theme }) => theme.space[4]}px;\n    width: 80px;\n\n    font-weight: 500;\n    text-decoration: none;\n\n    color: ${({ theme }) => theme.colors.black};\n    box-shadow: ${({ theme }) => theme.shadows[1]};\n\n    display: flex;\n    align-items: end;\n    gap: ${({ theme }) => theme.space[2]}px;\n  }\n`;\n\nexport const Details = styled.div`\n  padding: ${({ theme }) => theme.space[4]}px;\n`;\n\nexport const MovieCard = styled.div`\n  padding: ${({ theme }) => theme.space[4]}px;\n  display: flex;\n  flex-wrap: nowrap;\n  gap: ${({ theme }) => theme.space[5]}px;\n  text-decoration: none;\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  height: 450px;\n  object-fit: cover;\n  border-radius: ${({ theme }) => theme.radii.normal};\n`;\n\nexport const Title = styled.h1`\n  margin-top: ${({ theme }) => theme.space[3]}px;\n  font-size: ${({ theme }) => theme.fontSizes.l};\n  font-style: normal;\n`;\n\nexport const Overview = styled.div`\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  color: black;\n\n  > p {\n    margin: ${({ theme }) => theme.space[4]}px 0\n      ${({ theme }) => theme.space[5]}px;\n  }\n`;\n\nexport const Tabs = styled.div`\n  display: flex;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 10px 0;\n  width: 80px;\n\n  font-weight: 500;\n  text-decoration: none;\n  text-align: center;\n\n  color: ${({ theme }) => theme.colors.black};\n  border: 1px solid ${({ theme }) => theme.colors.border};\n\n  &.active {\n    box-shadow: ${({ theme }) => theme.shadows[1]};\n  }\n`;\n","import api from './api';\nimport { REQUEST_URL } from '../../constants';\n\nexport const getMovieById = async id => {\n  const url = `${REQUEST_URL.MOVIE}/${id}`;\n\n  try {\n    const response = await api.get(url);\n    return response.data;\n  } catch (error) {\n    return null;\n  }\n};\n","import { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport {\n  Controls,\n  Overview,\n  Poster,\n  Title,\n  Link,\n  Tabs,\n  MovieCard,\n  Details,\n} from './MovieDetails.styled';\nimport { getMovieById } from '../../utils/api/getMovieById';\nimport imageNotFound from '../../images/image-not-found.png';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { IMAGE_URL } from '../../constants';\nimport getMessageType from '../../utils/getMessageType';\nimport Message from '../../components/Message';\nimport Loader from '../../components/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    (async () => {\n      try {\n        const data = await getMovieById(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n\n    return () => {\n      setError(null);\n      setMovie(null);\n    };\n  }, [movieId]);\n\n  const params = {\n    hasError: error,\n    hasResults: movie,\n  };\n  const messageType = getMessageType(params);\n\n  const poster = movie?.['poster_path']\n    ? `${IMAGE_URL}${movie?.['poster_path']}`\n    : imageNotFound;\n  const year = new Date(movie?.['release_date']).getFullYear();\n  const score = (Number(movie?.['vote_average']) * 10).toFixed();\n  const genres = movie?.genres.map(genre => genre.name).join(', ');\n\n  return (\n    <section>\n      <Controls>\n        <Link to={backLink}>\n          <BsArrowLeft /> Go back\n        </Link>\n      </Controls>\n\n      {movie && (\n        <>\n          <MovieCard>\n            <Poster src={poster} alt={movie?.['original_title']} />\n            <Overview>\n              <Title>\n                {movie?.['original_title']}\n                {!isNaN(year) && <span> ({year})</span>}\n              </Title>\n              <p>User score: {score}%</p>\n              <h2>Overview</h2>\n              <p>{movie?.overview}</p>\n              {genres !== '' && (\n                <>\n                  <h2>Genres</h2>\n                  <p>{genres}</p>\n                </>\n              )}\n            </Overview>\n          </MovieCard>\n          <hr />\n          <Details>\n            <h2>Additional information</h2>\n            <Tabs>\n              <Link to=\"cast\" state={{ from: backLink }}>\n                Cast\n              </Link>\n              <Link to=\"reviews\" state={{ from: backLink }}>\n                Reviews\n              </Link>\n            </Tabs>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </Details>\n        </>\n      )}\n\n      {isLoading && <Loader />}\n\n      {!isLoading && messageType && <Message type={messageType} />}\n    </section>\n  );\n};\n\nexport default MovieDetails;\n","import { MESSAGE_TYPES } from '../constants';\n\nconst getMessageType = ({ hasError, hasResults, hasSearchQuery = true }) => {\n  if (hasError) {\n    return MESSAGE_TYPES.ERROR;\n  }\n  if (!hasResults && !hasSearchQuery) {\n    return MESSAGE_TYPES.EMPTY_QUERY;\n  }\n  if (!hasResults && hasSearchQuery) {\n    return MESSAGE_TYPES.NO_RESULTS;\n  }\n  return null;\n};\n\nexport default getMessageType;\n"],"names":["Container","styled","theme","space","Text","fontWeights","bold","Image","messageDescription","emptyQuery","text","image","error","noResults","type","message","src","alt","Controls","colors","black","shadows","Details","MovieCard","Poster","radii","normal","Title","fontSizes","l","Overview","m","Tabs","Link","NavLink","border","getMovieById","id","url","REQUEST_URL","api","response","data","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","setError","backLink","useLocation","state","from","useEffect","params","hasError","hasResults","messageType","getMessageType","poster","IMAGE_URL","imageNotFound","year","Date","getFullYear","score","Number","toFixed","genres","map","genre","name","join","to","isNaN","overview","Suspense","fallback","Loader","Message","hasSearchQuery","MESSAGE_TYPES"],"sourceRoot":""}