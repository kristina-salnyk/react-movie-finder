{"version":3,"file":"static/js/77.c6edf927.chunk.js","mappings":"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","sources":["components/Message/Message.styled.js","components/Message/Message.jsx","components/MoviesList/MoviesList.styled.js","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","utils/api/getTrendingMovies.js","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: ${({ theme }) => theme.space[5]}px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-weight: ${({ theme }) => theme.fontWeights.bold};\n  font-size: 24px;\n`;\n\nexport const Image = styled.img`\n  max-width: 200px;\n`;\n","import { Container, Text, Image } from './Message.styled';\nimport PropTypes from 'prop-types';\nimport emptyQuery from 'images/empty-query.png';\nimport error from 'images/error.png';\nimport noResults from 'images/no-results.png';\n\nconst messageDescription = {\n  emptyQuery: {\n    text: 'Type to search something',\n    image: emptyQuery,\n  },\n  error: {\n    text: 'Something went wrong. Try again later',\n    image: error,\n  },\n  noResults: {\n    text: 'Nothing to see here',\n    image: noResults,\n  },\n};\n\nconst Message = ({ type }) => {\n  const message = messageDescription[type];\n\n  return (\n    <Container>\n      <Text>{message.text}</Text>\n      <Image src={message.image} alt={message.text} />\n    </Container>\n  );\n};\n\nexport default Message;\n\nMessage.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: ${({ theme }) => theme.space[4]}px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  grid-gap: ${({ theme }) => theme.space[4]}px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  box-shadow: ${({ theme }) => theme.shadows[2]};\n  border-radius: ${({ theme }) => theme.radii.normal};\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  padding: ${({ theme }) => theme.space[3]}px;\n  display: flex;\n  flex-wrap: nowrap;\n  gap: ${({ theme }) => theme.space[4]}px;\n  text-decoration: none;\n`;\n\nexport const Poster = styled.img`\n  width: 100px;\n  height: 150px;\n  object-fit: cover;\n  border-radius: ${({ theme }) => theme.radii.normal};\n`;\n\nexport const Title = styled.h2`\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-style: normal;\n`;\n\nexport const Description = styled.div`\n  font-size: ${({ theme }) => theme.fontSizes.xs};\n  font-style: italic;\n  color: black;\n\n  > p {\n    margin: ${({ theme }) => theme.space[3]}px 0;\n  }\n`;\n","import { Description, Poster, Title, Link } from './MovieItem.styled';\nimport imageNotFound from 'images/image-not-found.png';\nimport { useGenres } from '../../contexts/GenresContext';\nimport { useLocation } from 'react-router-dom';\nimport { IMAGE_URL } from '../../constants';\nimport PropTypes from 'prop-types';\n\nconst MovieItem = ({ id, posterPath, title, release, genresIds }) => {\n  const { getGenresByIds } = useGenres();\n  const location = useLocation();\n\n  const poster = posterPath ? `${IMAGE_URL}${posterPath}` : imageNotFound;\n  const year = new Date(release).getFullYear();\n  const genres = getGenresByIds(genresIds);\n\n  return (\n    <Link to={`/movies/${id}`} state={{ from: location }}>\n      <Poster src={poster} alt={title} />\n      <Description>\n        <Title>{title}</Title>\n        {!isNaN(year) && <p>Year: {year}</p>}\n        {genres !== '' && <p>Genres: {genres}</p>}\n      </Description>\n    </Link>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  genresIds: PropTypes.arrayOf(PropTypes.number),\n  id: PropTypes.number.isRequired,\n  posterPath: PropTypes.string,\n  release: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n","import { List, ListItem } from './MoviesList.styled';\nimport MovieItem from '../MovieItem';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ items }) => {\n  return (\n    <List>\n      {items.map(item => (\n        <ListItem key={item.id}>\n          <MovieItem\n            id={item.id}\n            posterPath={item['poster_path']}\n            title={item['original_title']}\n            release={item['release_date']}\n            genresIds={item['genre_ids']}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n","import api from './api';\nimport { REQUEST_URL, REQUEST_CONFIGS } from '../../constants';\n\nexport const getTrendingMovies = async () => {\n  const config = {\n    params: {\n      page: REQUEST_CONFIGS.page,\n    },\n  };\n\n  const url = `${REQUEST_URL.TRENDING}/${REQUEST_CONFIGS.mediaType}/${REQUEST_CONFIGS.timeWindow}`;\n\n  try {\n    const response = await api.get(url, config);\n    return response.data;\n  } catch (error) {\n    return null;\n  }\n};\n","import { Title } from './Home.styled';\nimport { getTrendingMovies } from '../../utils/api/getTrendingMovies';\nimport { useEffect, useState } from 'react';\nimport { MESSAGE_TYPES } from '../../constants';\nimport MoviesList from '../../components/MoviesList';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setError(null);\n\n    setIsLoading(true);\n\n    (async () => {\n      try {\n        const data = await getTrendingMovies();\n        setTrendingMovies(data.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <section>\n      <Title>Trending today</Title>\n\n      {trendingMovies.length > 0 && (\n        <MoviesList items={trendingMovies}></MoviesList>\n      )}\n\n      {isLoading && <Loader />}\n\n      {!isLoading && error && <Message type={MESSAGE_TYPES.ERROR} />}\n    </section>\n  );\n};\n\nexport default Home;\n"],"names":["Container","styled","theme","space","Text","fontWeights","bold","Image","messageDescription","emptyQuery","text","image","error","noResults","type","message","src","alt","List","ListItem","shadows","radii","normal","Link","NavLink","Poster","Title","fontSizes","m","Description","xs","id","posterPath","title","release","genresIds","getGenresByIds","useGenres","location","useLocation","poster","IMAGE_URL","imageNotFound","year","Date","getFullYear","genres","to","state","from","isNaN","items","map","item","getTrendingMovies","config","params","page","REQUEST_CONFIGS","url","REQUEST_URL","api","response","data","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","setError","useEffect","results","length","MoviesList","Loader","Message","MESSAGE_TYPES"],"sourceRoot":""}